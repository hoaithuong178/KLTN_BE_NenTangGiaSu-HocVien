// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/transaction-service"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ContractStatus {
  PENDING
  ACTIVE
  COMPLETED
  CANCELLED
}

model Contract {
  id            String         @id @default(cuid())
  studentId     String         @map("student_id")
  tutorId       String         @map("tutor_id")
  classId       String         @map("class_id")
  startDate     DateTime       @map("start_date")
  endDate       DateTime       @map("end_date")
  endDateActual DateTime       @map("end_date_actual")
  depositAmount Float          @map("deposit_amount")
  totalAmount   Float          @map("total_amount")
  feePerSession Float          @map("fee_per_session")
  status        ContractStatus @default(PENDING)
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")

  @@map("contracts")
}

enum PaymentType {
  DEPOSIT
  FEE_PER_SESSION
  BENEFIT
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

model Payment {
  id        String        @id @default(cuid())
  fromId    String?       @map("from_id")
  toId      String?       @map("to_id")
  docId     String?       @map("doc_id")
  amount    Float         @map("amount")
  amountEth Float?        @map("amount_eth")
  fee       Float?        @map("fee")
  feeEth    Float?        @map("fee_eth")
  type      PaymentType
  status    PaymentStatus @default(PENDING)
  createdAt DateTime      @default(now()) @map("created_at")
  updatedAt DateTime      @updatedAt @map("updated_at")

  @@map("payments")
}
